{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marko\\\\rizzchat-client\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatInterface() {\n  _s();\n  // State variables to manage messages and input\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [ws, setWs] = useState(null);\n\n  // useEffect hook for fetching messages and initializing WebSocket\n  useEffect(() => {\n    // Async function to fetch existing messages from the server\n    const fetchMessages = async () => {\n      const result = await axios.get(\"http://192.168.0.122:8000/rizzagges/\");\n      const formattedMessages = result.data.map(msg => ({\n        type: msg.user === \"machine\" ? \"receiver\" : \"sender\",\n        text: msg.content\n      }));\n      setMessages(formattedMessages);\n    };\n\n    // Invoke the fetchMessages function\n    fetchMessages();\n\n    // Initialize WebSocket connection\n    const websocket = new WebSocket(\"ws://192.168.0.122:8000/ws/\");\n    websocket.onopen = () => {\n      console.log(\"Connected to the WebSocket\");\n    };\n\n    // Handle incoming WebSocket messages\n    websocket.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data && data.type === \"response\") {\n          setMessages(prevMessages => [...prevMessages, {\n            type: \"receiver\",\n            text: data.content\n          }]);\n        }\n      } catch (error) {\n        setMessages(prevMessages => [...prevMessages, {\n          type: \"receiver\",\n          text: event.data\n        }]);\n      }\n    };\n\n    // Store WebSocket object in state\n    setWs(websocket);\n\n    // Cleanup function to close WebSocket on unmount\n    return () => {\n      websocket.close();\n    };\n  }, []);\n\n  // Function to send a message through WebSocket\n  const handleSend = message => {\n    if (message && ws) {\n      ws.send(message);\n      setMessages(prevMessages => [...prevMessages, {\n        type: \"sender\",\n        text: message\n      }]);\n      setInputMessage(\"\");\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // Chat interface layout and structure\n    _jsxDEV(\"div\", {\n      className: \"flex h-screen items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col w-full max-w-md bg-white p-4 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto pb-12\",\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex ${message.type === \"sender\" ? \"justify-end\" : \"justify-start\"} m-2`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `px-3 py-1 rounded-xl ${message.type === \"sender\" ? \"bg-blue-500\" : \"bg-gray-300 text-black\"}`,\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"fixed\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            bottom: 0\n          },\n          className: \"flex m-2 bg-white shadow-lg max-w-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            className: \"flex-1 px-3 py-1 rounded-l-xl border border-gray-300 focus:outline-none focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSend(inputMessage),\n            className: \"bg-blue-500 text-white px-4 py-1 rounded-r-xl\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(ChatInterface, \"ky/lq9oYihrqsJIXA+jZ503ArGw=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","inputMessage","setInputMessage","ws","setWs","fetchMessages","result","get","formattedMessages","data","map","msg","type","user","text","content","websocket","WebSocket","onopen","console","log","onmessage","event","JSON","parse","prevMessages","error","close","handleSend","message","send","className","children","index","fileName","_jsxFileName","lineNumber","columnNumber","style","position","left","transform","bottom","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/marko/rizzchat-client/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ChatInterface() {\r\n  // State variables to manage messages and input\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n  const [ws, setWs] = useState(null);\r\n\r\n  // useEffect hook for fetching messages and initializing WebSocket\r\n  useEffect(() => {\r\n    // Async function to fetch existing messages from the server\r\n    const fetchMessages = async () => {\r\n      const result = await axios.get(\"http://192.168.0.122:8000/rizzagges/\");\r\n      const formattedMessages = result.data.map((msg) => ({\r\n        type: msg.user === \"machine\" ? \"receiver\" : \"sender\",\r\n        text: msg.content,\r\n      }));\r\n      setMessages(formattedMessages);\r\n    };\r\n\r\n    // Invoke the fetchMessages function\r\n    fetchMessages();\r\n\r\n    // Initialize WebSocket connection\r\n    const websocket = new WebSocket(\"ws://192.168.0.122:8000/ws/\");\r\n    websocket.onopen = () => {\r\n      console.log(\"Connected to the WebSocket\");\r\n    };\r\n\r\n    // Handle incoming WebSocket messages\r\n    websocket.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        if (data && data.type === \"response\") {\r\n          setMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { type: \"receiver\", text: data.content },\r\n          ]);\r\n        }\r\n      } catch (error) {\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          { type: \"receiver\", text: event.data },\r\n        ]);\r\n      }\r\n    };\r\n\r\n    // Store WebSocket object in state\r\n    setWs(websocket);\r\n\r\n    // Cleanup function to close WebSocket on unmount\r\n    return () => {\r\n      websocket.close();\r\n    };\r\n  }, []);\r\n\r\n  // Function to send a message through WebSocket\r\n  const handleSend = (message) => {\r\n    if (message && ws) {\r\n      ws.send(message);\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { type: \"sender\", text: message },\r\n      ]);\r\n      setInputMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    // Chat interface layout and structure\r\n    <div className=\"flex h-screen items-center justify-center\">\r\n      <div className=\"flex flex-col w-full max-w-md bg-white p-4 rounded-lg shadow\">\r\n        <div className=\"flex-1 overflow-y-auto pb-12\">\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className={`flex ${\r\n                message.type === \"sender\" ? \"justify-end\" : \"justify-start\"\r\n              } m-2`}\r\n            >\r\n              <span\r\n                className={`px-3 py-1 rounded-xl ${\r\n                  message.type === \"sender\"\r\n                    ? \"bg-blue-500\"\r\n                    : \"bg-gray-300 text-black\"\r\n                }`}\r\n              >\r\n                {message.text}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            left: \"50%\",\r\n            transform: \"translateX(-50%)\",\r\n            bottom: 0,\r\n          }}\r\n          className=\"flex m-2 bg-white shadow-lg max-w-md\"\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n            className=\"flex-1 px-3 py-1 rounded-l-xl border border-gray-300 focus:outline-none focus:border-blue-500\"\r\n          />\r\n          <button\r\n            onClick={() => handleSend(inputMessage)}\r\n            className=\"bg-blue-500 text-white px-4 py-1 rounded-r-xl\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInterface;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}